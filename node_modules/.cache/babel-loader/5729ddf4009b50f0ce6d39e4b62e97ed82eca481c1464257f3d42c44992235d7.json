{"ast":null,"code":"import { SERVER_URL } from '../config';\nimport URL from 'constants/url';\nimport CODE from 'constants/code';\nimport { getSessionItem, setSessionItem } from 'utils/storage';\nexport function getQueryString(params) {\n  return `?${Object.entries(params).map(e => e.join('=')).join('&')}`;\n}\nexport function requestFetch(url, requestOptions, handler, errorHandler) {\n  console.groupCollapsed(\"requestFetch\");\n  console.log(\"requestFetch [URL] : \", SERVER_URL + url);\n  console.log(\"requestFetch [requestOption] : \", requestOptions);\n\n  // Login 했을경우 JWT 설정\n  const sessionUser = getSessionItem('loginUser');\n  const sessionUserId = (sessionUser === null || sessionUser === void 0 ? void 0 : sessionUser.id) || null;\n  const jToken = getSessionItem('jToken');\n  if (sessionUserId != null && sessionUserId !== undefined) {\n    if (!requestOptions['headers']) requestOptions['headers'] = {};\n    if (!requestOptions['headers']['Authorization']) requestOptions['headers']['Authorization'] = null;\n    requestOptions['headers']['Authorization'] = jToken;\n  }\n\n  //CORS ISSUE 로 인한 조치 - origin 및 credentials 추가 \n  // origin 추가\n  if (!requestOptions['origin']) {\n    requestOptions = {\n      ...requestOptions,\n      origin: SERVER_URL\n    };\n  }\n  // credentials 추가 \n  if (!requestOptions['credentials']) {\n    requestOptions = {\n      ...requestOptions,\n      credentials: 'include'\n    };\n  }\n  fetch(SERVER_URL + url, requestOptions).then(response => {\n    // response Stream. Not completion object\n    //console.log(\"requestFetch [Response Stream] \", response); \n    return response.json();\n  }).then(resp => {\n    if (Number(resp.resultCode) === Number(CODE.RCV_ERROR_AUTH)) {\n      alert(\"Login Alert\"); //index.jsx라우터파일에 jwtAuthentication 함수로 공통 인증을 사용하는 코드 추가로 alert 원상복구\n      setSessionItem('loginUser', {\n        \"id\": \"\"\n      });\n      window.location.href = URL.LOGIN;\n      return false;\n    } else {\n      return resp;\n    }\n  }).then(resp => {\n    console.groupCollapsed(\"requestFetch.then()\");\n    console.log(\"requestFetch [response] \", resp);\n    if (typeof handler === 'function') {\n      handler(resp);\n    } else {\n      console.log('egov fetch handler not assigned!');\n    }\n    console.groupEnd(\"requestFetch.then()\");\n  }).catch(error => {\n    console.error('There was an error!', error);\n    if (error === 'TypeError: Failed to fetch') {\n      alert(\"서버와의 연결이 원활하지 않습니다. 서버를 확인하세요.\");\n    }\n    if (typeof errorHandler === 'function') {\n      errorHandler(error);\n    } else {\n      console.error('egov error handler not assigned!');\n      alert(\"ERR : \" + error.message);\n    }\n  }).finally(() => {\n    console.log(\"requestFetch finally end\");\n    console.groupEnd(\"requestFetch\");\n  });\n}","map":{"version":3,"names":["SERVER_URL","URL","CODE","getSessionItem","setSessionItem","getQueryString","params","Object","entries","map","e","join","requestFetch","url","requestOptions","handler","errorHandler","console","groupCollapsed","log","sessionUser","sessionUserId","id","jToken","undefined","origin","credentials","fetch","then","response","json","resp","Number","resultCode","RCV_ERROR_AUTH","alert","window","location","href","LOGIN","groupEnd","catch","error","message","finally"],"sources":["D:/Devs4.1/workspace/egovframe-template-simple-react/src/api/egovFetch.js"],"sourcesContent":["import { SERVER_URL } from '../config';\n\nimport URL from 'constants/url';\nimport CODE from 'constants/code';\nimport { getSessionItem, setSessionItem } from 'utils/storage';\n\nexport function getQueryString(params){\n    return `?${Object.entries(params).map(e => e.join('=')).join('&') }`\n}\n\nexport function requestFetch(url, requestOptions, handler, errorHandler) {\n    console.groupCollapsed(\"requestFetch\");\n    console.log(\"requestFetch [URL] : \", SERVER_URL + url);\n    console.log(\"requestFetch [requestOption] : \", requestOptions);\n\n    // Login 했을경우 JWT 설정\n    const sessionUser = getSessionItem('loginUser');\n    const sessionUserId = sessionUser?.id || null;\n    const jToken = getSessionItem('jToken');\n    if(sessionUserId != null && sessionUserId !== undefined){\n        if( !requestOptions['headers'] ) requestOptions['headers']={}\n        if( !requestOptions['headers']['Authorization'] ) requestOptions['headers']['Authorization']=null;\n        requestOptions['headers']['Authorization'] = jToken;\n    }\n    \n\n    //CORS ISSUE 로 인한 조치 - origin 및 credentials 추가 \n    // origin 추가\n    if (!requestOptions['origin']) {\n        requestOptions = { ...requestOptions, origin: SERVER_URL };\n    }\n    // credentials 추가 \n    if (!requestOptions['credentials']) {\n        requestOptions = { ...requestOptions, credentials: 'include' };\n    }\n\n    fetch(SERVER_URL + url, requestOptions)\n        .then(response => {// response Stream. Not completion object\n            //console.log(\"requestFetch [Response Stream] \", response); \n            return response.json();\n        })\n        .then((resp) => {\n            if (Number(resp.resultCode) === Number(CODE.RCV_ERROR_AUTH)) {\n                alert(\"Login Alert\"); //index.jsx라우터파일에 jwtAuthentication 함수로 공통 인증을 사용하는 코드 추가로 alert 원상복구\n                setSessionItem('loginUser', {\"id\":\"\"});\n                window.location.href = URL.LOGIN;\n                return false;\n            } else {\n                return resp;\n            }\n        })\n        .then((resp) => {\n            console.groupCollapsed(\"requestFetch.then()\");\n            console.log(\"requestFetch [response] \", resp);\n            if (typeof handler === 'function') {\n                handler(resp);\n            } else {\n                console.log('egov fetch handler not assigned!');\n            }\n            console.groupEnd(\"requestFetch.then()\");\n        })\n        .catch(error => {\n            console.error('There was an error!', error);\n            if (error === 'TypeError: Failed to fetch') {\n                alert(\"서버와의 연결이 원활하지 않습니다. 서버를 확인하세요.\");\n            }\n\n            if (typeof errorHandler === 'function') {\n                errorHandler(error);\n            } else {\n                console.error('egov error handler not assigned!');\n                alert(\"ERR : \" + error.message);\n            }\n        })\n        .finally(() => {\n            console.log(\"requestFetch finally end\");\n            console.groupEnd(\"requestFetch\");\n        });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}